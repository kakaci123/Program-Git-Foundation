@model s26web.Areas.shb.Models.IntroductionModel.IntroductionModelShow

@{
    int err = 0;
    if (TempData["err"] != null)
    {
        err = (int)TempData["err"];
    }
    string temp_dir = "Introduction";
    if (ViewData["temp_dir"] != null)
    {
        temp_dir = ViewData["temp_dir"].ToString();
    }
}
<script type="text/javascript">
    var CKEDITOR_BASEPATH = '@s26web.Models.Method.RootPath/Scripts/plugin/ckeditor/';
    var temp_dir = '@temp_dir';
</script>

@Scripts.Render("~/js/Admin_Introduction")
@Styles.Render("~/css/AdminContent")

<div class="big_title">@ViewBag.Title</div>

@if (err == 1)
{
    @:找不到資料!
}
else
{
    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        <fieldset>
            <legend>@ViewBag.Title</legend>

            @Html.HiddenFor(model => model.Id)

            <div class="editor-label">
                @Html.LabelFor(model => model.Title)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Title)
                @Html.ValidationMessageFor(model => model.Title)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.Content)<br />
            </div>
            <div class="editor-field">
                @Html.TextAreaFor(model => model.Content, new { @class = "ckeditor" })
                @*@Html.TextAreaFor(model => model.Content, new { style = "width: 60%" })*@
                @Html.ValidationMessageFor(model => model.Content)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.CreateTime)
            </div>
            <div class="editor-field">
                @Html.DisplayFor(model => model.CreateTime)
                @Html.ValidationMessageFor(model => model.CreateTime)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.UpdateTime)
            </div>
            <div class="editor-field">
                @Html.DisplayFor(model => model.UpdateTime)
                @Html.ValidationMessageFor(model => model.UpdateTime)
            </div>

            <p>
                <input type="submit" value="儲存" />
            </p>
            @if (err == 2)
            {
                <div class="error">儲存失敗!</div>
            }
        </fieldset>
    }
}